---
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: kartograph
objects:
  # PersistentVolumeClaims
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: dgraph-alpha-pvc
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 50Gi

  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: app-pvc
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi

  # ClowdApp
  - apiVersion: cloud.redhat.com/v1alpha1
    kind: ClowdApp
    metadata:
      name: kartograph
      annotations:
        # Enable SAML authentication for crcauth
        crc.auth.type: "saml"
    spec:
      envName: ${ENV_NAME}

      deployments:
        # Kartograph App - Nuxt application (UI + MCP server)
        # NOTE: Dgraph deployments moved to deploy/dgraph-standalone.yaml
        # Clowder's aggressive service management was incompatible with dgraph's custom ports
        - name: app
          minReplicas: ${{APP_REPLICAS}}
          web: true
          webServices:
            public:
              enabled: true
              apiPath: kartograph
              whitelistPaths:
                - /api/kartograph/*
            metrics:
              enabled: false
          podSpec:
            image: ${IMAGE}:${IMAGE_TAG}
            ports:
              - name: web
                protocol: TCP
                containerPort: 8000
            env:
              - name: PORT
                value: "8000"
              # Nuxt runtime config override (NUXT_ prefix required for runtime override)
              - name: NUXT_DGRAPH_URL
                value: "http://kartograph-dgraph-alpha:8080"
              - name: NUXT_APP_BASE_URL
                value: "/api/kartograph/"
              - name: NUXT_PUBLIC_ORIGIN
                value: ${APP_PUBLIC_URL}
              - name: NUXT_PUBLIC_GITHUB_URL
                value: ${GITHUB_URL}
              - name: DATABASE_URL
                value: "/data/kartograph.db"
              # Nuxt runtime config overrides for Better Auth
              - name: NUXT_BETTER_AUTH_SECRET
                valueFrom:
                  secretKeyRef:
                    name: kartograph-secrets
                    key: auth-secret
              - name: BETTER_AUTH_TRUSTED_ORIGINS
                value: ${APP_PUBLIC_URL}
              - name: ENABLE_RH_IDENTITY_HEADER
                value: "false"
              # Authentication Configuration
              # NUXT_ prefix required for runtime config overrides in deployed app
              - name: NUXT_AUTH_PASSWORD_ENABLED
                valueFrom:
                  secretKeyRef:
                    name: kartograph-auth-config
                    key: password-enabled
                    optional: true
              - name: NUXT_PUBLIC_AUTH_PASSWORD_ENABLED
                valueFrom:
                  secretKeyRef:
                    name: kartograph-auth-config
                    key: password-enabled
                    optional: true
              - name: NUXT_AUTH_ALLOWED_EMAIL_DOMAINS
                valueFrom:
                  secretKeyRef:
                    name: kartograph-auth-config
                    key: allowed-domains
                    optional: true
              - name: NUXT_ADMIN_EMAILS
                valueFrom:
                  secretKeyRef:
                    name: kartograph-auth-config
                    key: admin-emails
                    optional: true
              # GitHub OAuth configuration
              - name: NUXT_GITHUB_CLIENT_ID
                valueFrom:
                  secretKeyRef:
                    name: kartograph-github-oauth
                    key: client-id
                    optional: true
              - name: NUXT_GITHUB_CLIENT_SECRET
                valueFrom:
                  secretKeyRef:
                    name: kartograph-github-oauth
                    key: client-secret
                    optional: true
              # Vertex AI configuration (Nuxt runtime overrides)
              - name: NUXT_GOOGLE_APPLICATION_CREDENTIALS
                value: /etc/vertex-ai/credentials.json
              - name: NUXT_VERTEX_PROJECT_ID
                valueFrom:
                  secretKeyRef:
                    name: kartograph-vertex-ai
                    key: project-id
                    optional: true
              - name: NUXT_VERTEX_REGION
                valueFrom:
                  secretKeyRef:
                    name: kartograph-vertex-ai
                    key: region
                    optional: true
              # Google Cloud SDK requires non-prefixed env vars
              - name: GOOGLE_APPLICATION_CREDENTIALS
                value: /etc/vertex-ai/credentials.json
              - name: CLAUDE_CODE_USE_VERTEX
                value: "1"
              # MCP Server Configuration
              # NUXT_ prefix required for runtime config overrides
              - name: NUXT_API_TOKEN_RATE_LIMIT
                value: ${API_TOKEN_RATE_LIMIT}
              - name: NUXT_API_TOKEN_MAX_EXPIRY_DAYS
                value: ${API_TOKEN_MAX_EXPIRY_DAYS}
              - name: NUXT_API_TOKEN_DEFAULT_EXPIRY_DAYS
                value: ${API_TOKEN_DEFAULT_EXPIRY_DAYS}
              - name: NUXT_AUDIT_LOG_RETENTION_DAYS
                value: ${AUDIT_LOG_RETENTION_DAYS}
            volumes:
              - name: app-data
                persistentVolumeClaim:
                  claimName: app-pvc
              - name: vertex-ai-credentials
                secret:
                  secretName: kartograph-vertex-ai
                  optional: true
            volumeMounts:
              - name: app-data
                mountPath: /data
              - name: vertex-ai-credentials
                mountPath: /etc/vertex-ai
                readOnly: true
            livenessProbe:
              httpGet:
                path: /api/kartograph/api/health
                port: 8000
              initialDelaySeconds: 10
              periodSeconds: 30
              timeoutSeconds: 5
              failureThreshold: 3
            readinessProbe:
              httpGet:
                path: /api/kartograph/api/health
                port: 8000
              initialDelaySeconds: 5
              periodSeconds: 10
              timeoutSeconds: 5
              failureThreshold: 3
            resources:
              limits:
                cpu: ${APP_CPU_LIMIT}
                memory: ${APP_MEMORY_LIMIT}
              requests:
                cpu: ${APP_CPU_REQUEST}
                memory: ${APP_MEMORY_REQUEST}

parameters:
  - name: ENV_NAME
    description: ClowdEnvironment name
    required: true

  # Image parameters
  - name: IMAGE
    description: Image name for app
    value: quay.io/cloudservices/kartograph-app
  - name: IMAGE_TAG
    description: Image tag for app
    value: latest
  - name: DGRAPH_IMAGE
    description: Dgraph image
    value: dgraph/dgraph
  - name: DGRAPH_IMAGE_TAG
    description: Dgraph image tag
    value: v23.1.1

  # App parameters
  - name: APP_REPLICAS
    description: Number of app replicas
    value: "1"
  - name: APP_CPU_LIMIT
    value: "500m"
  - name: APP_CPU_REQUEST
    value: "100m"
  - name: APP_MEMORY_LIMIT
    value: "512Mi"
  - name: APP_MEMORY_REQUEST
    value: "256Mi"
  - name: APP_PUBLIC_URL
    description: Public URL for the app
    required: true
  - name: GITHUB_URL
    description: GitHub repository URL (optional, shows button in footer if set)
    value: ""

  # MCP Server Configuration parameters
  - name: API_TOKEN_RATE_LIMIT
    description: API token rate limit (queries per hour)
    value: "100"
  - name: API_TOKEN_MAX_EXPIRY_DAYS
    description: Maximum API token lifetime in days
    value: "365"
  - name: API_TOKEN_DEFAULT_EXPIRY_DAYS
    description: Default API token lifetime in days
    value: "90"
  - name: AUDIT_LOG_RETENTION_DAYS
    description: Query audit log retention period in days
    value: "90"

  # Dgraph Zero parameters
  - name: DGRAPH_ZERO_REPLICAS
    value: "1"
  - name: DGRAPH_ZERO_CPU_LIMIT
    value: "500m"
  - name: DGRAPH_ZERO_CPU_REQUEST
    value: "100m"
  - name: DGRAPH_ZERO_MEMORY_LIMIT
    value: "512Mi"
  - name: DGRAPH_ZERO_MEMORY_REQUEST
    value: "256Mi"

  # Dgraph Alpha parameters
  - name: DGRAPH_ALPHA_REPLICAS
    value: "1"
  - name: DGRAPH_ALPHA_CPU_LIMIT
    value: "1000m"
  - name: DGRAPH_ALPHA_CPU_REQUEST
    value: "200m"
  - name: DGRAPH_ALPHA_MEMORY_LIMIT
    value: "2Gi"
  - name: DGRAPH_ALPHA_MEMORY_REQUEST
    value: "1Gi"
